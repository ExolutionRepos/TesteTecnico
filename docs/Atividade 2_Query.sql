CREATE DATABASE TESTETECNICO 
GO
USE TESTETECNICO
GO


CREATE TABLE CLIENTE (
IDCLIENTE				BIGINT IDENTITY PRIMARY KEY,
NOME					VARCHAR(350) NOT NULL,
CPF						VARCHAR(11) NOT NULL,
UF						VARCHAR(2) NOT NULL,
CELULAR					VARCHAR(11))
GO
		

CREATE TABLE FINANCIAMENTO (
IDFINANCIAMENTO			BIGINT IDENTITY PRIMARY KEY,
CPF						VARCHAR(11) NOT NULL,
TIPOFINANCIMANETO		INT NOT NULL,
VALORTOTAL				DECIMAL(19,2) NOT NULL,
DATAULTIMOVENCIMENTO	DATE NOT NULL,
IDCLIENTE				BIGINT NOT NULL,
CONSTRAINT FK_CLIENTEFINANCIAMENTO FOREIGN KEY (IDCLIENTE) REFERENCES CLIENTE(IDCLIENTE)
)
GO

CREATE TABLE PARCELA (
IDPARCELA				BIGINT IDENTITY PRIMARY KEY,
NUMEROPARCELA			INT NOT NULL,
VALORPARCELA			DECIMAL(19,2) NOT NULL,
DATAVENCIMENTO			DATE, 
DATAPAGAMENTO			DATE,
IDFINANCIAMENTO				BIGINT NOT NULL,
CONSTRAINT FK_FINANCIAMENTOPARCELA FOREIGN KEY (IDFINANCIAMENTO) REFERENCES FINANCIAMENTO(IDFINANCIAMENTO))
GO

INSERT CLIENTE VALUES ('TESTE1', '1', 'SP', NULL),('TESTE2', '12', 'RJ', '123456789'),('TESTE3', '123', 'SP', NULL)
GO

INSERT INTO FINANCIAMENTO SELECT CPF, 1, 3500.98, '2021-03-21', IDCLIENTE FROM CLIENTE WHERE CPF = '1'
GO
INSERT INTO FINANCIAMENTO SELECT CPF, 2, 42500.2, '2021-06-09', IDCLIENTE FROM CLIENTE WHERE CPF = '12'
GO
INSERT INTO FINANCIAMENTO SELECT CPF, 3, 679.2, '2019-12-17', IDCLIENTE FROM CLIENTE WHERE CPF = '123'


GO
DECLARE @PARCELA INT, @QTDEPARCELA INT;

SET @PARCELA = 1;
SET @QTDEPARCELA = 34;

WHILE @PARCELA < @QTDEPARCELA
BEGIN 
    INSERT INTO PARCELA SELECT  @PARCELA, VALORTOTAL/@QTDEPARCELA, DATEADD(MONTH, @PARCELA, DATAULTIMOVENCIMENTO), CASE WHEN DATEDIFF(DAY, DATEADD(MONTH, @PARCELA, FIN.DATAULTIMOVENCIMENTO), GETDATE()) >= 0 THEN DATEADD(MONTH, @PARCELA, DATAULTIMOVENCIMENTO) ELSE NULL END, FIN.IDFINANCIAMENTO  
		FROM FINANCIAMENTO FIN 
			LEFT JOIN PARCELA PAR ON FIN.IDFINANCIAMENTO = PAR.IDFINANCIAMENTO 
								 AND PAR.IDPARCELA = (SELECT TOP 1 IDPARCELA FROM PARCELA ORDER BY 1 DESC)  WHERE CPF = '1'
	
    SET @PARCELA = @PARCELA + 1;
END

SET @PARCELA = 1;
SET @QTDEPARCELA = 72;

WHILE @PARCELA < @QTDEPARCELA
BEGIN 
    INSERT INTO PARCELA SELECT  @PARCELA, VALORTOTAL/@QTDEPARCELA, DATEADD(MONTH, @PARCELA, DATAULTIMOVENCIMENTO), CASE WHEN DATEDIFF(DAY, DATEADD(MONTH, @PARCELA, FIN.DATAULTIMOVENCIMENTO), GETDATE()) >= 0 THEN DATEADD(MONTH, @PARCELA, DATAULTIMOVENCIMENTO) ELSE NULL END, FIN.IDFINANCIAMENTO  
		FROM FINANCIAMENTO FIN 
			LEFT JOIN PARCELA PAR ON FIN.IDFINANCIAMENTO = PAR.IDFINANCIAMENTO 
								 AND PAR.IDPARCELA = (SELECT TOP 1 ISNULL(IDPARCELA,1) FROM PARCELA ORDER BY 1 DESC)  WHERE CPF = '12'
	
    SET @PARCELA = @PARCELA + 1;
END

SET @PARCELA = 1;
SET @QTDEPARCELA = 23;

WHILE @PARCELA < @QTDEPARCELA
BEGIN 
    INSERT INTO PARCELA SELECT  @PARCELA, VALORTOTAL/@QTDEPARCELA, DATEADD(MONTH, @PARCELA, DATAULTIMOVENCIMENTO), CASE WHEN DATEDIFF(DAY, DATEADD(MONTH, @PARCELA, FIN.DATAULTIMOVENCIMENTO), GETDATE()) >= 0 THEN DATEADD(MONTH, @PARCELA, DATAULTIMOVENCIMENTO) ELSE NULL END, FIN.IDFINANCIAMENTO  
		FROM FINANCIAMENTO FIN 
			LEFT JOIN PARCELA PAR ON FIN.IDFINANCIAMENTO = PAR.IDFINANCIAMENTO 
								 AND PAR.IDPARCELA = (SELECT TOP 1 ISNULL(IDPARCELA,1) FROM PARCELA ORDER BY 1 DESC)  WHERE CPF = '123'
	
    SET @PARCELA = @PARCELA + 1;
END

GO

-- PORCENTAGEM DA LISTA PARCELAS
SELECT IDFINANCIAMENTO,((CAST(COUNT(DATAPAGAMENTO) AS DECIMAL)*100)/(CAST(MAX(NUMEROPARCELA) AS DECIMAL))) FROM PARCELA
GROUP BY IDFINANCIAMENTO

-- LISTAR TODOS OS CLIENTES DO ESTADO DE SP QUE POSSUEM MAIS DE 60% DAS PARCELAS PAGAS;
SELECT CLI.NOME, CONVERT(VARCHAR,((COUNT(DATAPAGAMENTO)/MAX(NUMEROPARCELA)) * 100)) + '% DAS PARCELAS PAGAS' AS 'QUERY' FROM CLIENTE CLI
			INNER JOIN FINANCIAMENTO FIN ON CLI.IDCLIENTE = FIN.IDCLIENTE
			INNER JOIN PARCELA 		 PAR ON FIN.IDFINANCIAMENTO = PAR.IDFINANCIAMENTO
WHERE UF = 'SP'
GROUP BY CLI.NOME
HAVING COUNT(DATAPAGAMENTO)/MAX(NUMEROPARCELA) > 0.6

-- PREPARAÇÃO DA LISTA PARA A QUERY SOLICITADA
UPDATE PARCELA SET DATAPAGAMENTO = NULL WHERE IDPARCELA IN (19,20,21)

-- LISTAR OS PRIMEIROS QUATRO CLIENTES QUE POSSUEM ALGUMA PARCELA COM MAIS DE CINCO DIAS EM ATRASO
SELECT TOP 4 CLI.NOME, DATAVENCIMENTO FROM CLIENTE CLI
			INNER JOIN FINANCIAMENTO FIN ON CLI.IDCLIENTE = FIN.IDCLIENTE
			INNER JOIN PARCELA 		 PAR ON FIN.IDFINANCIAMENTO = PAR.IDFINANCIAMENTO
WHERE DATEDIFF(DAY,DATAVENCIMENTO,GETDATE()) > 5 AND DATAPAGAMENTO IS NULL
GROUP BY CLI.NOME, DATAVENCIMENTO